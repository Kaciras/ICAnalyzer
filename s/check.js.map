{"version":3,"file":"s/check.js","mappings":"sFAgBA,GAAI,CAEHA,KAAK,uBAELC,OAAOC,aAAa,CAAG,EACxB,CAAE,KAAM,CACPD,OAAOC,aAAa,CAAG,GACvBC,MAAM,oEACP,C","sources":["webpack://ic-analyzer/./web/support-check.ts"],"sourcesContent":["// noinspection JSUnusedGlobalSymbols\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface Window {\n\t__isSupport__: boolean;\n}\n\n/*\n * Check if the browser can run this app, alert if it cannot. see README.MD for supported browsers.\n *\n * Since SyntaxError thrown while the code is being parsed,\n * to catch it the test code should be wrapped with eval() and the script block\n * must run before parsing any invalid code.\n *\n * This file is an entry point and will be injected to HTML before the index chunk.\n */\n\ntry {\n\t// noinspection JSUnusedLocalSymbols\n\teval(\"const x = null ?? 0\");\n\n\twindow.__isSupport__ = true;\n} catch {\n\twindow.__isSupport__ = false;\n\talert(\"ICAnalyzer doesn't support this browser, please use a modern one.\");\n}\n"],"names":["eval","window","__isSupport__","alert"],"sourceRoot":""}